//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Этот исходный текст был создан автоматически: Microsoft.VSDesigner, версия: 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ConsoleWebSocket_server.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendInformationModelJSONOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOnlineStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRequestToDBOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::ConsoleWebSocket_server.Properties.Settings.Default.ConsoleWebSocket_server_localhost_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendInformationModelJSONCompletedEventHandler SendInformationModelJSONCompleted;
        
        /// <remarks/>
        public event SendOnlineStatusCompletedEventHandler SendOnlineStatusCompleted;
        
        /// <remarks/>
        public event SendRequestToDBCompletedEventHandler SendRequestToDBCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendInformationModelJSON", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public InformationModel SendInformationModelJSON(string json) {
            object[] results = this.Invoke("SendInformationModelJSON", new object[] {
                        json});
            return ((InformationModel)(results[0]));
        }
        
        /// <remarks/>
        public void SendInformationModelJSONAsync(string json) {
            this.SendInformationModelJSONAsync(json, null);
        }
        
        /// <remarks/>
        public void SendInformationModelJSONAsync(string json, object userState) {
            if ((this.SendInformationModelJSONOperationCompleted == null)) {
                this.SendInformationModelJSONOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendInformationModelJSONOperationCompleted);
            }
            this.InvokeAsync("SendInformationModelJSON", new object[] {
                        json}, this.SendInformationModelJSONOperationCompleted, userState);
        }
        
        private void OnSendInformationModelJSONOperationCompleted(object arg) {
            if ((this.SendInformationModelJSONCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendInformationModelJSONCompleted(this, new SendInformationModelJSONCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOnlineStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendOnlineStatus() {
            this.Invoke("SendOnlineStatus", new object[0]);
        }
        
        /// <remarks/>
        public void SendOnlineStatusAsync() {
            this.SendOnlineStatusAsync(null);
        }
        
        /// <remarks/>
        public void SendOnlineStatusAsync(object userState) {
            if ((this.SendOnlineStatusOperationCompleted == null)) {
                this.SendOnlineStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOnlineStatusOperationCompleted);
            }
            this.InvokeAsync("SendOnlineStatus", new object[0], this.SendOnlineStatusOperationCompleted, userState);
        }
        
        private void OnSendOnlineStatusOperationCompleted(object arg) {
            if ((this.SendOnlineStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOnlineStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendRequestToDB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendRequestToDB(string json) {
            this.Invoke("SendRequestToDB", new object[] {
                        json});
        }
        
        /// <remarks/>
        public void SendRequestToDBAsync(string json) {
            this.SendRequestToDBAsync(json, null);
        }
        
        /// <remarks/>
        public void SendRequestToDBAsync(string json, object userState) {
            if ((this.SendRequestToDBOperationCompleted == null)) {
                this.SendRequestToDBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRequestToDBOperationCompleted);
            }
            this.InvokeAsync("SendRequestToDB", new object[] {
                        json}, this.SendRequestToDBOperationCompleted, userState);
        }
        
        private void OnSendRequestToDBOperationCompleted(object arg) {
            if ((this.SendRequestToDBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRequestToDBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class InformationModel {
        
        private string computerNameField;
        
        private string timeZoneField;
        
        private string oS_NameField;
        
        private string netVersionField;
        
        /// <remarks/>
        public string ComputerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        public string TimeZone {
            get {
                return this.timeZoneField;
            }
            set {
                this.timeZoneField = value;
            }
        }
        
        /// <remarks/>
        public string OS_Name {
            get {
                return this.oS_NameField;
            }
            set {
                this.oS_NameField = value;
            }
        }
        
        /// <remarks/>
        public string NetVersion {
            get {
                return this.netVersionField;
            }
            set {
                this.netVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendInformationModelJSONCompletedEventHandler(object sender, SendInformationModelJSONCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendInformationModelJSONCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendInformationModelJSONCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InformationModel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InformationModel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendOnlineStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendRequestToDBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591